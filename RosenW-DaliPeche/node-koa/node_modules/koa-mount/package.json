{
  "_from": "koa-mount",
  "_id": "koa-mount@3.0.0",
  "_inBundle": false,
  "_integrity": "sha1-CMqzuD0xRC7Yt+dcVLGr65IuwZc=",
  "_location": "/koa-mount",
  "_phantomChildren": {
    "ms": "2.0.0"
  },
  "_requested": {
    "escapedName": "koa-mount",
    "fetchSpec": "latest",
    "name": "koa-mount",
    "raw": "koa-mount",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/koa-mount/-/koa-mount-3.0.0.tgz",
  "_shasum": "08cab3b83d31442ed8b7e75c54b1abeb922ec197",
  "_spec": "koa-mount",
  "_where": "/home/ros/Desktop/repo/RosenW-DaliPeche/node-koa",
  "bugs": {
    "url": "https://github.com/koajs/mount/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "debug": "^2.6.1",
    "koa-compose": "^3.2.1"
  },
  "deprecated": false,
  "description": "Mounting middleware for koa",
  "devDependencies": {
    "istanbul": "^0.4.5",
    "koa": "^2.0.1",
    "mocha": "^3.2.0",
    "should": "^11.2.0",
    "supertest": "^3.0.0"
  },
  "engines": {
    "node": ">= 7.6.0"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/koajs/mount#readme",
  "keywords": [
    "koa",
    "middleware",
    "mount",
    "mounting"
  ],
  "license": "MIT",
  "name": "koa-mount",
  "optionalDependencies": {},
  "readme": "# koa-mount\n\n  Mount other Koa applications as middleware. The `path` passed to `mount()` is stripped\n  from the URL temporarily until the stack unwinds. This is useful for creating entire\n  apps or middleware that will function correctly regardless of which path segment(s)\n  they should operate on.\n\n## Installation\n\n```js\n$ npm install koa-mount\n```\n\n## Examples\n\n  View the [./examples](examples) directory for working examples.\n\n### Mounting Applications\n\n  Entire applications mounted at specific paths. For example you could mount\n  a blog application at \"/blog\", with a router that matches paths such as\n  \"GET /\", \"GET /posts\", and will behave properly for \"GET /blog/posts\" etc\n  when mounted.\n\n```js\nconst mount = require('koa-mount');\nconst Koa = require('koa');\n\n// hello\n\nconst a = new Koa();\n\na.use(async function (ctx, next){\n  await next();\n  ctx.body = 'Hello';\n});\n\n// world\n\nconst b = new Koa();\n\nb.use(async function (ctx, next){\n  await next();\n  ctx.body = 'World';\n});\n\n// app\n\nconst app = new Koa();\n\napp.use(mount('/hello', a));\napp.use(mount('/world', b));\n\napp.listen(3000);\nconsole.log('listening on port 3000');\n```\n\n  Try the following requests:\n\n```\n$ GET /\nNot Found\n\n$ GET /hello\nHello\n\n$ GET /world\nWorld\n```\n\n### Mounting Middleware\n\n  Mount middleware at specific paths, allowing them to operate independently\n  of the prefix, as they're not aware of it.\n\n```js\nconst mount = require('koa-mount');\nconst Koa = require('koa');\n\nasync function hello(ctx, next){\n  await next();\n  ctx.body = 'Hello';\n}\n\nasync function world(ctx, next){\n  await next();\n  ctx.body = 'World';\n}\n\nconst app = new Koa();\n\napp.use(mount('/hello', hello));\napp.use(mount('/world', world));\n\napp.listen(3000);\nconsole.log('listening on port 3000');\n```\n\n### Optional Paths\n\n  The path argument is optional, defaulting to \"/\":\n\n```js\napp.use(mount(a));\napp.use(mount(b));\n```\n\n## Debugging\n\n  Use the __DEBUG__ environement variable to whitelist\n  koa-mount debug output:\n\n```\n$ DEBUG=koa-mount node myapp.js &\n$ GET /foo/bar/baz\n\n  koa-mount enter /foo/bar/baz -> /bar/baz +2s\n  koa-mount enter /bar/baz -> /baz +0ms\n  koa-mount enter /baz -> / +0ms\n  koa-mount leave /baz -> / +1ms\n  koa-mount leave /bar/baz -> /baz +0ms\n  koa-mount leave /foo/bar/baz -> /bar/baz +0ms\n```\n\n## License\n\n  MIT\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/koajs/mount.git"
  },
  "scripts": {
    "test": "NODE_ENV=test mocha --reporter spec",
    "test-cov": "NODE_ENV=test istanbul cover ./node_modules/.bin/_mocha",
    "test-travis": "NODE_ENV=test istanbul cover ./node_modules/.bin/_mocha --report lcovonly"
  },
  "version": "3.0.0"
}
